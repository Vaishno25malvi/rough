public class StringProcessor {

    public static String parseAnsiToHtml(String ansiString) {
        // Convert ANSI to HTML using Jansi
        String htmlString = AnsiRenderer.render(ansiString);
        return "<html>" + htmlString + "</html>";
    }
}


------
import org.fusesource.jansi.AnsiRenderer;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import java.awt.*;

public class HtmlAnsiTableCellRenderer extends DefaultTableCellRenderer {

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
                                                   boolean isSelected, boolean hasFocus, int row, int column) {
        if (value instanceof String) {
            String html = (String) value;
            JLabel label = new JLabel(html);
            label.setOpaque(true);
            label.setFont(table.getFont());
            if (isSelected) {
                label.setBackground(table.getSelectionBackground());
                label.setForeground(table.getSelectionForeground());
            } else {
                label.setBackground(table.getBackground());
                label.setForeground(table.getForeground());
            }
            return label;
        }
        return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
    }
}
-----


import org.fusesource.jansi.Ansi;
import org.fusesource.jansi.AnsiRenderer;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import java.awt.*;

public class HtmlAnsiTableCellRenderer extends DefaultTableCellRenderer {

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
                                                   boolean isSelected, boolean hasFocus, int row, int column) {
        if (value instanceof String) {
            String html = (String) value;
            html = parseAnsiToHtml(html); // Convert ANSI to HTML
            JLabel label = new JLabel(html);
            label.setOpaque(true);
            label.setFont(table.getFont());
            if (isSelected) {
                label.setBackground(table.getSelectionBackground());
                label.setForeground(table.getSelectionForeground());
            } else {
                label.setBackground(table.getBackground());
                label.setForeground(table.getForeground());
            }
            return label;
        }
        return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
    }

    private String parseAnsiToHtml(String ansiString) {
        // Use Jansi to convert ANSI to HTML
        String htmlString = AnsiRenderer.render(ansiString);
        return "<html>" + htmlString + "</html>";
    }
}


-------







import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class JTableExample {

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            JFrame frame = new JFrame("JTable HTML with ANSI Codes");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            String[] columnNames = {"HTML Data"};
            Object[][] data = {
                    {"\u001B[31mRed Text\u001B[0m and <b>bold</b> HTML"},
                    {"\u001B[32mGreen Text\u001B[0m and <i>italic</i> HTML"}
            };

            DefaultTableModel model = new DefaultTableModel(data, columnNames);
            JTable table = new JTable(model);
            table.setDefaultRenderer(Object.class, new HtmlAnsiTableCellRenderer());

            JScrollPane scrollPane = new JScrollPane(table);
            frame.add(scrollPane);

            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
        });
    }
}
